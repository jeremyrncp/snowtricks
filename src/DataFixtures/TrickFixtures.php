<?php
/**
 * Crée par Jérémy Gaultier <contact@webmezenc.com>
 * Tous droits réservés
 */

namespace App\DataFixtures;

use App\Entity\Trick;
use App\Utils\Generic\SlugServices;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Common\DataFixtures\DependentFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;

class TrickFixtures extends Fixture implements DependentFixtureInterface
{
    /**
     * @param ObjectManager $manager
     * @throws \App\Exception\EmptyException
     */
    public function load(ObjectManager $manager)
    {
        for ($i = 0; $i < 10; $i ++) {
            $trick = $this->getTrick();
            $trick->setUser($this->getReference(UserFixtures::USER_ADMIN_REFERENCES));
            $trick->setSlug($trick->getSlug() . "-" . $i);
            $trick->setName($trick->getName() . "(" . $i . ")");

            $manager->persist($trick);
        }

        $manager->flush();
    }

    /**
     * @return Trick
     * @throws \App\Exception\EmptyException
     */
    private function getTrick()
    {
        $trick = new Trick();
        $trick->setName("Mute");
        $trick->setDescription("Grabs mute");
        $trick->setSlug(SlugServices::slugify("Mute"));
        $trick->setTrickGroup($this->getReference(TrickGroupFixtures::TRICK_GROUP_REFERENCE_ONE_FOOT_TRICKS));
        $trick->setDescription("Description de test");
        return $trick;
    }

    /**
     * @return array
     */
    public function getDependencies()
    {
        return [
            TrickGroupFixtures::class,
            UserFixtures::class
        ];
    }

    /**
     * @param string $name
     * @param object $object
     */
    public function addReference($name, $object)
    {
        parent::addReference($name, $object); // TODO: Change the autogenerated stub
    }
}
